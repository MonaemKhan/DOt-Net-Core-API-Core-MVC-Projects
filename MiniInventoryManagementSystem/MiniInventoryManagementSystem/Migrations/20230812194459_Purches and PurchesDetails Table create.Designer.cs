// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniInventoryManagementSystem.DbCon;

#nullable disable

namespace MiniInventoryManagementSystem.Migrations
{
    [DbContext(typeof(DbConnectionContext))]
    [Migration("20230812194459_Purches and PurchesDetails Table create")]
    partial class PurchesandPurchesDetailsTablecreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.Catagory", b =>
                {
                    b.Property<int>("CatagoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatagoryId"), 1L, 1);

                    b.Property<string>("CatagoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CatagoryId");

                    b.ToTable("CatagoryTable");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomerTable");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_CatagoryId")
                        .HasColumnType("int")
                        .HasColumnName("CatagoryId");

                    b.HasKey("ProductId");

                    b.HasIndex("Product_CatagoryId");

                    b.ToTable("ProductTable");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.Purches", b =>
                {
                    b.Property<int>("PurchesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchesId"), 1L, 1);

                    b.Property<string>("PurchesDate")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Purches_SupplyerId")
                        .HasColumnType("int")
                        .HasColumnName("SupplyerId");

                    b.HasKey("PurchesId");

                    b.HasIndex("Purches_SupplyerId");

                    b.ToTable("PurchesTable");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.PurchesDetails", b =>
                {
                    b.Property<int>("PurchesDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchesDetailsId"), 1L, 1);

                    b.Property<double>("PurchesDetailsPrice")
                        .HasColumnType("float");

                    b.Property<double>("PurchesDetailsQuantity")
                        .HasColumnType("float");

                    b.Property<int>("PurchesDetails_ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductId");

                    b.Property<int>("PurchesDetails_PurchesId")
                        .HasColumnType("int")
                        .HasColumnName("PurchesId");

                    b.HasKey("PurchesDetailsId");

                    b.HasIndex("PurchesDetails_ProductId");

                    b.HasIndex("PurchesDetails_PurchesId");

                    b.ToTable("PurchesDetailsTable");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.Sales", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesId"), 1L, 1);

                    b.Property<string>("SalesDate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Sales_CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerId");

                    b.Property<int>("Sales_SalesManId")
                        .HasColumnType("int")
                        .HasColumnName("SalesManID");

                    b.HasKey("SalesId");

                    b.HasIndex("Sales_CustomerId");

                    b.HasIndex("Sales_SalesManId");

                    b.ToTable("SalesTable");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.SalesDetails", b =>
                {
                    b.Property<int>("SalesDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesDetailsId"), 1L, 1);

                    b.Property<double>("SalesDetailsPrice")
                        .HasColumnType("float");

                    b.Property<int>("SalesDetailsQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SalesDetails_ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SalesDetails_SalesId")
                        .HasColumnType("int")
                        .HasColumnName("SalesId");

                    b.HasKey("SalesDetailsId");

                    b.HasIndex("SalesDetails_ProductId");

                    b.HasIndex("SalesDetails_SalesId");

                    b.ToTable("SalesDetailsTable");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.SalesMan", b =>
                {
                    b.Property<int>("SalesManId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesManId"), 1L, 1);

                    b.Property<string>("SalesManAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalesManDOB")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SalesManDesignation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SalesManEmail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SalesManJoiningDate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SalesManName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SalesManPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SalesManSalary")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SalesManId");

                    b.ToTable("SalesManTable");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.Supplyer", b =>
                {
                    b.Property<int>("SupplyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplyerId"), 1L, 1);

                    b.Property<string>("SupplyerAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SupplyerName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplyerPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SupplyerId");

                    b.ToTable("SupplyerTable");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.Product", b =>
                {
                    b.HasOne("MiniInventoryManagementSystem.Models.Catagory", "Product_Catagory")
                        .WithMany()
                        .HasForeignKey("Product_CatagoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product_Catagory");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.Purches", b =>
                {
                    b.HasOne("MiniInventoryManagementSystem.Models.Supplyer", "Purches_Supplyer")
                        .WithMany()
                        .HasForeignKey("Purches_SupplyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Purches_Supplyer");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.PurchesDetails", b =>
                {
                    b.HasOne("MiniInventoryManagementSystem.Models.Product", "PurchesDetails_Product")
                        .WithMany()
                        .HasForeignKey("PurchesDetails_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniInventoryManagementSystem.Models.Purches", "PurchesDetails_Purches")
                        .WithMany()
                        .HasForeignKey("PurchesDetails_PurchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchesDetails_Product");

                    b.Navigation("PurchesDetails_Purches");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.Sales", b =>
                {
                    b.HasOne("MiniInventoryManagementSystem.Models.Customer", "Sales_Customer")
                        .WithMany()
                        .HasForeignKey("Sales_CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniInventoryManagementSystem.Models.SalesMan", "Sales_SalesMan")
                        .WithMany()
                        .HasForeignKey("Sales_SalesManId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sales_Customer");

                    b.Navigation("Sales_SalesMan");
                });

            modelBuilder.Entity("MiniInventoryManagementSystem.Models.SalesDetails", b =>
                {
                    b.HasOne("MiniInventoryManagementSystem.Models.Product", "SalesDetails_Product")
                        .WithMany()
                        .HasForeignKey("SalesDetails_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniInventoryManagementSystem.Models.Sales", "SalesDetails_Sales")
                        .WithMany()
                        .HasForeignKey("SalesDetails_SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesDetails_Product");

                    b.Navigation("SalesDetails_Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
